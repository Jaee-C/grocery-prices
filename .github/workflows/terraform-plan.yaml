name: 'Terraform Plan'
on:
  workflow_call:
    inputs:
      environment:
        type: string
      aws-region:
        type: string

defaults:
  run:
    working-directory: infra

jobs:
  terraform:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Assume AWS role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.DEPLOYMENT_ROLE_ARN }}
          aws-region: ${{ inputs.aws-region }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -check=true -write=false -diff

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: |
          terraform validate -no-color | tee -a validate.log

      - name: Terraform Plan
        id: plan
        run: |
          set +e
          terraform plan -no-color -input=false -detailed-exitcode -out=tfplan
          exitcode=$?
          echo "TERRAFORM_EXITCODE=${exitcode}" >> "$GITHUB_ENV"
          if [ $exitcode -ne 1 ]; then
            echo "Terraform plan succeeded"
            exit 0
          else
            echo "Terraform plan failed"
            exit 1
          fi

      - uses: actions/upload-artifact@v4
        if: ${{ steps.plan.conclusion == 'success' }}
        with:
          name: terraform-plan-${{ github.run_number }}
          path: infra/tfplan
          retention-days: 14
