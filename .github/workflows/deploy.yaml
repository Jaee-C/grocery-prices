name: Terraform Apply

on:
  workflow_call:
    inputs:
      environment:
        type: string
      aws-region:
        type: string
      image-name:
        type: string

jobs:
  push-to-ecr:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: ${{ inputs.environment }}
    env:
      IMAGE_NAME: grocery-images
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Assume AWS role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.DEPLOYMENT_ROLE_ARN }}
          aws-region: ${{ inputs.aws-region }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .

      - name: Push image to Amazon ECR
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ inputs.image-name }}
          docker push ${{ inputs.image-name }}

  terraform-apply:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: ${{ inputs.environment }}
    needs: push-to-ecr
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Assume AWS role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.DEPLOYMENT_ROLE_ARN }}
          aws-region: ${{ inputs.aws-region }}

      - name: Terraform Apply
        id: apply
        working-directory: infra
        run: terraform apply -auto-approve -var="grocery_prices_image=${{ inputs.image-name }}"
